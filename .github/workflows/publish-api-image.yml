name: Publish Wasabi Bot API Image

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Target environment (ECR repository suffix)"
        default: "staging"
        required: true
  push:
    branches: [ main ]
    paths:
      - "src/WasabiBot.Api/**"
      - "src/WasabiBot.DataAccess/**"
      - "src/WasabiBot.ServiceDefaults/**"
      - ".github/workflows/publish-api-image.yml"
      - "Directory.Build.props"
      - "Directory.Packages.props"
      - "Dockerfile"
      - "src/WasabiBot.Api/Dockerfile"

permissions:
  contents: read
  id-token: write

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY_STAGING: wasabi-bot/wasabi-bot-api-staging

jobs:
  publish:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'staging' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.GH_ACTIONS_AWS_ROLE }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set image metadata
        id: meta
        run: |
          target_env="${{ github.event.inputs.environment || 'staging' }}"
          case "$target_env" in
            staging) repo="${ECR_REPOSITORY_STAGING}" ;;
            *) echo "Unsupported environment: $target_env" >&2; exit 1 ;;
          esac

          image_tag="${GITHUB_SHA::12}"
          image_uri="${{ steps.login-ecr.outputs.registry }}/$repo"

          echo "repo=$repo" >> "$GITHUB_OUTPUT"
          echo "tag=$image_tag" >> "$GITHUB_OUTPUT"
          echo "uri=$image_uri" >> "$GITHUB_OUTPUT"
          echo "full_tag=$image_uri:$image_tag" >> "$GITHUB_OUTPUT"

      - name: Build image
        run: |
          docker build \
            --file src/WasabiBot.Api/Dockerfile \
            --tag "${{ steps.meta.outputs.full_tag }}" \
            --tag "${{ steps.meta.outputs.uri }}:latest" \
            .

      - name: Push image tags
        run: |
          docker push "${{ steps.meta.outputs.full_tag }}"
          docker push "${{ steps.meta.outputs.uri }}:latest"

      - name: Capture digest
        id: describe-image
        run: |
          digest=$(aws ecr describe-images \
            --repository-name "${{ steps.meta.outputs.repo }}" \
            --image-ids imageTag="${{ steps.meta.outputs.tag }}" \
            --query 'imageDetails[0].imageDigest' \
            --output text)

          echo "digest=$digest" >> "$GITHUB_OUTPUT"
          echo "image=${{ steps.meta.outputs.uri }}@$digest" >> "$GITHUB_OUTPUT"

      - name: Share image metadata
        run: |
          echo "Pushed image: ${{ steps.describe-image.outputs.image }}"
          echo "Tag: ${{ steps.meta.outputs.tag }}"
